#!/usr/bin/env node

/**
 * Generate a TypeScript module that exports the bundle as a string
 * This can be imported by DomExtractionTools
 */

import { readFileSync, writeFileSync } from 'node:fs';
import { dirname, resolve } from 'node:path';
import { fileURLToPath } from 'node:url';

const __dirname = dirname(fileURLToPath(import.meta.url));

// Read the bundle
const bundlePath = resolve(__dirname, 'dist-bundle/smart-dom-reader-bundle.js');
const bundleContent = readFileSync(bundlePath, 'utf-8');

// Create the TypeScript module content
const moduleContent = `/**
 * Auto-generated bundle module for smart-dom-reader
 * DO NOT EDIT - Generated by generate-bundle-module.mjs
 *
 * This module exports the bundled smart-dom-reader library as a string
 * that can be injected into web pages for stateless DOM extraction.
 */

export const SMART_DOM_READER_BUNDLE = ${JSON.stringify(bundleContent)};

export const SMART_DOM_READER_VERSION = '1.0.0';
`;

// Write to src directory so it can be imported
const outputPath = resolve(__dirname, 'src/bundle-string.ts');
writeFileSync(outputPath, moduleContent);

console.log(`âœ“ Bundle module generated at: ${outputPath}`);
console.log(`  Bundle size: ${(bundleContent.length / 1024).toFixed(2)} KB`);
console.log(
  `  Can be imported as: import { SMART_DOM_READER_BUNDLE } from '@mcp-b/smart-dom-reader/bundle-string'`
);
